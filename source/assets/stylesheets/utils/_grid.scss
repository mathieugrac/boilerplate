/* Grid
––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––– */


/* Container –––––––––––––––––––––––––––––––––––––––––––––––––– */

.container, .container-fluid {
  box-sizing: border-box;
  margin-right: auto;
  margin-left: auto;
  max-width: $grid-max;
}

@each $item, $break in $grid {
  @media only screen and (min-width: map-get($break, breakpoint)) {
    .container, .container-fluid { width: map-get($break, container); }
  }
}

.container-fluid .row [class^="col-"] {
  padding: 0;
}


// Row ––––––––––––––––––––––––––––––––––––––––––––––––––––––– */

.row {
  position: relative;
  width: 100%;
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

.row .row {
  margin-left: -$grid-gutter/2;
  margin-right: -$grid-gutter/2;
}

// Columns ––––––––––––––––––––––––––––––––––––––––––––––––––– */

.row [class^="col-"] {
  box-sizing: border-box;
  float: left;
  padding: 0 $grid-gutter/2;
  width: 100%;
}

@each $item, $break in $grid {
  @media only screen and (min-width: map-get($break, breakpoint)) {
    @for $col from 1 through $grid-columns {
      .row .col-#{$item}-#{$col}  { width: percentage($col/$grid-columns); }
      .row .push-#{$item}-#{$col} { margin-left: percentage($col/$grid-columns); }
    }
  }
}
